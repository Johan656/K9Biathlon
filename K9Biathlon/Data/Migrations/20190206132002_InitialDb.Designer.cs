// <auto-generated />
using System;
using K9Biathlon.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace K9Biathlon.Migrations
{
    [DbContext(typeof(K9Context))]
    [Migration("20190206132002_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("K9Biathlon.Data.Entities.Anmalan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AnmalningsDatum");

                    b.Property<int>("DeltagareId");

                    b.Property<int>("LoppId");

                    b.HasKey("Id");

                    b.HasIndex("DeltagareId");

                    b.HasIndex("LoppId");

                    b.ToTable("Anmalningar");
                });

            modelBuilder.Entity("K9Biathlon.Data.Entities.Deltagare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alder");

                    b.Property<string>("ENamn");

                    b.Property<string>("FNamn");

                    b.Property<string>("Kon");

                    b.HasKey("Id");

                    b.ToTable("Deltagare");
                });

            modelBuilder.Entity("K9Biathlon.Data.Entities.Hund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alder");

                    b.Property<int>("DeltagareId");

                    b.Property<string>("Namn");

                    b.Property<string>("Ras");

                    b.HasKey("Id");

                    b.HasIndex("DeltagareId")
                        .IsUnique();

                    b.ToTable("Hundar");
                });

            modelBuilder.Entity("K9Biathlon.Data.Entities.Lopp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Distans");

                    b.Property<string>("Klass");

                    b.Property<int?>("TavlingId");

                    b.HasKey("Id");

                    b.HasIndex("TavlingId");

                    b.ToTable("Lopp");
                });

            modelBuilder.Entity("K9Biathlon.Data.Entities.Tavling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress");

                    b.Property<int>("Ar");

                    b.Property<int>("LoppId");

                    b.HasKey("Id");

                    b.ToTable("Tavlingar");
                });

            modelBuilder.Entity("K9Biathlon.Data.Entities.Anmalan", b =>
                {
                    b.HasOne("K9Biathlon.Data.Entities.Deltagare", "Deltagare")
                        .WithMany()
                        .HasForeignKey("DeltagareId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("K9Biathlon.Data.Entities.Lopp", "Lopp")
                        .WithMany("Anmalningar")
                        .HasForeignKey("LoppId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("K9Biathlon.Data.Entities.Hund", b =>
                {
                    b.HasOne("K9Biathlon.Data.Entities.Deltagare", "Deltagare")
                        .WithOne("Hund")
                        .HasForeignKey("K9Biathlon.Data.Entities.Hund", "DeltagareId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("K9Biathlon.Data.Entities.Lopp", b =>
                {
                    b.HasOne("K9Biathlon.Data.Entities.Tavling")
                        .WithMany("Lopp")
                        .HasForeignKey("TavlingId");
                });
#pragma warning restore 612, 618
        }
    }
}
